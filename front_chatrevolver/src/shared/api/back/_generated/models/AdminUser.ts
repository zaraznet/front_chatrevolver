/* tslint:disable */
/* eslint-disable */
/**
 * Revolver API
 * Revolver API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { VipEntity, VipEntityFromJSON, VipEntityFromJSONTyped, VipEntityToJSON } from "./";

/**
 *
 * @export
 * @interface AdminUser
 */
export interface AdminUser {
  /**
   *
   * @type {number}
   * @memberof AdminUser
   */
  id: number;
  /**
   *
   * @type {VipEntity}
   * @memberof AdminUser
   */
  vip?: VipEntity;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  email?: string;
  /**
   *
   * @type {boolean}
   * @memberof AdminUser
   */
  deleted: boolean;
  /**
   *
   * @type {boolean}
   * @memberof AdminUser
   */
  blocked: boolean;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  sex: AdminUserSexEnum;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  imageAbsolutePath: string;
  /**
   *
   * @type {Date}
   * @memberof AdminUser
   */
  birthday?: Date;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  status: string;
  /**
   *
   * @type {string}
   * @memberof AdminUser
   */
  descriptionPrivate?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof AdminUser
   */
  tags: Array<string>;
  /**
   *
   * @type {number}
   * @memberof AdminUser
   */
  rating?: number;
  /**
   *
   * @type {number}
   * @memberof AdminUser
   */
  views: number;
  /**
   *
   * @type {number}
   * @memberof AdminUser
   */
  lon?: number;
  /**
   *
   * @type {number}
   * @memberof AdminUser
   */
  lat?: number;
  /**
   *
   * @type {boolean}
   * @memberof AdminUser
   */
  hide?: boolean;
}

export function AdminUserFromJSON(json: any): AdminUser {
  return AdminUserFromJSONTyped(json, false);
}

export function AdminUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUser {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    vip: !exists(json, "vip") ? undefined : VipEntityFromJSON(json["vip"]),
    email: !exists(json, "email") ? undefined : json["email"],
    deleted: json["deleted"],
    blocked: json["blocked"],
    name: json["name"],
    sex: json["sex"],
    country: !exists(json, "country") ? undefined : json["country"],
    city: !exists(json, "city") ? undefined : json["city"],
    imageAbsolutePath: json["imageAbsolutePath"],
    birthday: !exists(json, "birthday") ? undefined : new Date(json["birthday"]),
    description: json["description"],
    status: json["status"],
    descriptionPrivate: !exists(json, "descriptionPrivate") ? undefined : json["descriptionPrivate"],
    tags: json["tags"],
    rating: !exists(json, "rating") ? undefined : json["rating"],
    views: json["views"],
    lon: !exists(json, "lon") ? undefined : json["lon"],
    lat: !exists(json, "lat") ? undefined : json["lat"],
    hide: !exists(json, "hide") ? undefined : json["hide"],
  };
}

export function AdminUserToJSON(value?: AdminUser | null): any {
  if (value === undefined) {
    return null;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id === undefined ? undefined : value.id,
    vip: VipEntityToJSON(value.vip),
    email: value.email === undefined ? undefined : value.email,
    deleted: value.deleted === undefined ? undefined : value.deleted,
    blocked: value.blocked === undefined ? undefined : value.blocked,
    name: value.name === undefined ? undefined : value.name,
    sex: value.sex === undefined ? undefined : value.sex,
    country: value.country === undefined ? undefined : value.country,
    city: value.city === undefined ? undefined : value.city,
    imageAbsolutePath: value.imageAbsolutePath === undefined ? undefined : value.imageAbsolutePath,
    birthday: value.birthday === undefined ? undefined : value.birthday.toISOString(),
    description: value.description === undefined ? undefined : value.description,
    status: value.status === undefined ? undefined : value.status,
    descriptionPrivate: value.descriptionPrivate === undefined ? undefined : value.descriptionPrivate,
    tags: value.tags === undefined ? undefined : value.tags,
    rating: value.rating === undefined ? undefined : value.rating,
    views: value.views === undefined ? undefined : value.views,
    lon: value.lon === undefined ? undefined : value.lon,
    lat: value.lat === undefined ? undefined : value.lat,
    hide: value.hide === undefined ? undefined : value.hide,
  };
}

/**
 * @export
 * @enum {string}
 */
export enum AdminUserSexEnum {
  MALE = "MALE",
  FEMALE = "FEMALE",
  UNDEF = "UNDEF",
}
