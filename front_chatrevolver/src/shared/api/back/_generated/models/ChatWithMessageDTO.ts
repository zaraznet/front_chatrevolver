/* tslint:disable */
/* eslint-disable */
/**
 * Revolver API
 * Revolver API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  CompactUserProfileDTO,
  CompactUserProfileDTOFromJSON,
  CompactUserProfileDTOFromJSONTyped,
  CompactUserProfileDTOToJSON,
  MessageDTO,
  MessageDTOFromJSON,
  MessageDTOFromJSONTyped,
  MessageDTOToJSON,
} from "./";

/**
 *
 * @export
 * @interface ChatWithMessageDTO
 */
export interface ChatWithMessageDTO {
  /**
   *
   * @type {CompactUserProfileDTO}
   * @memberof ChatWithMessageDTO
   */
  user: CompactUserProfileDTO;
  /**
   *
   * @type {MessageDTO}
   * @memberof ChatWithMessageDTO
   */
  message?: MessageDTO;
  /**
   *
   * @type {number}
   * @memberof ChatWithMessageDTO
   */
  chatID: number;
  /**
   *
   * @type {number}
   * @memberof ChatWithMessageDTO
   */
  unreadMessages: number;
}

export function ChatWithMessageDTOFromJSON(json: any): ChatWithMessageDTO {
  return ChatWithMessageDTOFromJSONTyped(json, false);
}

export function ChatWithMessageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatWithMessageDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    user: CompactUserProfileDTOFromJSON(json["user"]),
    message: !exists(json, "message") ? undefined : MessageDTOFromJSON(json["message"]),
    chatID: json["chatID"],
    unreadMessages: json["unreadMessages"],
  };
}

export function ChatWithMessageDTOToJSON(value?: ChatWithMessageDTO | null): any {
  if (value === undefined) {
    return null;
  }
  if (value === null) {
    return null;
  }
  return {
    user: CompactUserProfileDTOToJSON(value.user),
    message: MessageDTOToJSON(value.message),
    chatID: value.chatID === undefined ? undefined : value.chatID,
    unreadMessages: value.unreadMessages === undefined ? undefined : value.unreadMessages,
  };
}
