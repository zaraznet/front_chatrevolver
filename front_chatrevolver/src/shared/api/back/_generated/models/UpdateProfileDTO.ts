/* tslint:disable */
/* eslint-disable */
/**
 * Revolver API
 * Revolver API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface UpdateProfileDTO
 */
export interface UpdateProfileDTO {
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  sex?: UpdateProfileDTOSexEnum;
  /**
   *
   * @type {Date}
   * @memberof UpdateProfileDTO
   */
  birthday?: Date;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  image?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  descriptionPrivate?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateProfileDTO
   */
  status?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateProfileDTO
   */
  tags?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateProfileDTO
   */
  images?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof UpdateProfileDTO
   */
  hide?: boolean;
}

export function UpdateProfileDTOFromJSON(json: any): UpdateProfileDTO {
  return UpdateProfileDTOFromJSONTyped(json, false);
}

export function UpdateProfileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProfileDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, "name") ? undefined : json["name"],
    sex: !exists(json, "sex") ? undefined : json["sex"],
    birthday: !exists(json, "birthday") ? undefined : new Date(json["birthday"]),
    image: !exists(json, "image") ? undefined : json["image"],
    city: !exists(json, "city") ? undefined : json["city"],
    country: !exists(json, "country") ? undefined : json["country"],
    description: !exists(json, "description") ? undefined : json["description"],
    descriptionPrivate: !exists(json, "descriptionPrivate") ? undefined : json["descriptionPrivate"],
    status: !exists(json, "status") ? undefined : json["status"],
    tags: !exists(json, "tags") ? undefined : json["tags"],
    images: !exists(json, "images") ? undefined : json["images"],
    hide: !exists(json, "hide") ? undefined : json["hide"],
  };
}

export function UpdateProfileDTOToJSON(value?: UpdateProfileDTO | null): any {
  if (value === undefined) {
    return null;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name === undefined ? undefined : value.name,
    sex: value.sex === undefined ? undefined : value.sex,
    birthday: value.birthday === undefined ? undefined : value.birthday.toISOString(),
    image: value.image === undefined ? undefined : value.image,
    city: value.city === undefined ? undefined : value.city,
    country: value.country === undefined ? undefined : value.country,
    description: value.description === undefined ? undefined : value.description,
    descriptionPrivate: value.descriptionPrivate === undefined ? undefined : value.descriptionPrivate,
    status: value.status === undefined ? undefined : value.status,
    tags: value.tags === undefined ? undefined : value.tags,
    images: value.images === undefined ? undefined : value.images,
    hide: value.hide === undefined ? undefined : value.hide,
  };
}

/**
 * @export
 * @enum {string}
 */
export enum UpdateProfileDTOSexEnum {
  MALE = "MALE",
  FEMALE = "FEMALE",
  UNDEF = "UNDEF",
}
